  # ...existing code...
services:
  
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    command: server /data --console-address ":9001"
    volumes:
      - ./minio/data:/data

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow
    depends_on:
      - minio
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - S3_ENDPOINT=minio:9000
      - S3_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - S3_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./scoring/scripts:/opt/airflow/scoring/scripts
      - ./data/raw:/opt/airflow/data/raw
      - ./data/processed:/opt/airflow/data/processed
      - ./helpers:/opt/airflow/helpers
      # Mount our custom init script
      - ./airflow/scripts/entrypoint.sh:/entrypoint.sh:ro
      - ./visualizations:/opt/airflow/visualizations
    # Run that script as the containerâ€™s entrypoint
    entrypoint: ["/bin/bash", "/entrypoint.sh"]

  actualdata-postgres:
    image: postgres:15
    container_name: actualdata-postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${ACTUALDATA_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ACTUALDATA_POSTGRES_PASSWORD}
      POSTGRES_DB: ${ACTUALDATA_POSTGRES_DB}
    ports:
      - "5436:5432"
    volumes:
      - actualdata_postgres_data:/var/lib/postgresql/data
    depends_on:
      - airflow

  metabase-postgres:
    image: postgres:15
    container_name: metabase-postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${METABASE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${METABASE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${METABASE_POSTGRES_DB}
    ports:
      - "5435:5432"
    volumes:
      - metabase_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${METABASE_POSTGRES_USER} -h ${METABASE_POSTGRES_HOST} -p ${METABASE_POSTGRES_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 5

  metabase:
      image: metabase/metabase:latest
      platform: linux/arm64/v8
      container_name: metabase
      depends_on:
        metabase-postgres:
          condition: service_healthy
      ports:
        - "3000:3000"
      env_file:
        - .env
      environment:
        MB_DB_TYPE: postgres
        MB_DB_DBNAME:  ${METABASE_POSTGRES_DB}
        MB_DB_PORT: ${METABASE_POSTGRES_PORT}
        MB_DB_USER: ${METABASE_POSTGRES_USER}
        MB_DB_PASS: ${METABASE_POSTGRES_PASSWORD}
        MB_DB_HOST: ${METABASE_POSTGRES_HOST}
        MB_SETUP_ADMIN_EMAIL: ${METABASE_ADMIN_EMAIL}
        MB_SETUP_ADMIN_PASSWORD: ${METABASE_ADMIN_PASSWORD}
        MB_SETUP_ADMIN_FIRST_NAME: ${METABASE_ADMIN_FIRST_NAME}
        MB_SETUP_ADMIN_LAST_NAME: ${METABASE_ADMIN_LAST_NAME}

volumes:
  postgres_data:
  metabase_postgres_data:
  actualdata_postgres_data: